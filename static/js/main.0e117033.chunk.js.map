{"version":3,"sources":["components/navbar.js","components/page404.js","components/api.js","components/Moviecard.js","components/movies.js","components/tv.js","components/homepage.js","components/nowplaying.js","components/myform.js","components/login.js","components/moviepage.js","components/register.js","components/tvmoviepage.js","components/tvseasonmoviepage.js","components/searchpage.js","components/episode.js","App.js","reportWebVitals.js","index.js"],"names":["MyNavLink","myNavLinkProps","exact","activeClassName","children","Navbar","state","value","livesearchvalue","e","setState","target","className","to","type","id","placeholder","onChange","this","onClick","setTimeout","document","location","reload","props","loginState","handellogout","React","Component","NotFound","pathname","GetMovies","a","axios","get","response","tvid","seasonnumber","episodenumber","createRequestToken","tokin","searchvalue","tv_id","season_number","DeleteRate","delete","post","AddRate","values","headers","Moviecard","kk","refresh","idmovie","documentElement","scrollTop","handelLink","tvsolonger","tvlonger","bake_cookie","ffrom","longer","src","alt","title","overview","Movies","movies","componentDidMount","then","data","results","catch","error","alert","map","movie","style","width","minHeight","backdrop_path","Tv","tvmovies","tvtoprat","tvlate","handelatest","tvpoupular","console","log","tvtoprated","tvlatest","name","HomePage","role","Nowplaying","nowplaying","original_title","Myform","btnname","schema","Yup","shape","email","required","password","enableReinitialize","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","Login","user","username","checkAccount","slice","length","myaccount","read_cookie","handellogin","history","push","Moviepage","datamovie","movieImgs","movieReviews","myrate","Recommend","similar","handelrate","preventDefault","getElementById","classList","add","respone","handelrateinState","deleterate","remove","match","params","GetMovieDetails","GetMovieImgs","posters","GetMovieReviews","maxWidth","release_date","vote_average","vote_count","height","max","min","textAlign","img","maxHeight","file_path","review","author","content","moviereco","Register","addUser","request_token","formof","Tvmoviepage","tvdata","tvdetails","first_air_date","last_air_date","undefined","seasons","poster_path","Tvseasonmoviepage","seasondetails","GetTvseason","air_date","episodes","still_path","episode_number","Searchpage","moviessearched","searchmovie","handelcardofserch","search","Episode","episodedata","Getepisode","url","window","back","App","token","guest_session_id","SessionId","switchRoute","path","component","render","GuestSessionId","guestSessionId","GetToken","createSession","hashType","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"qQAGMA,EAAY,SAACC,GAAD,OACf,cAAC,IAAD,yBAASC,OAAK,EAACC,gBAAgB,UAAaF,GAA5C,aACIA,EAAeG,aAoEPC,E,4MA/DZC,MAAQ,CACLC,MAAO,I,EAEVC,gBAAkB,SAACC,GAChB,EAAKC,SAAS,CACXH,MAAOE,EAAEE,OAAOJ,S,4CAItB,WACG,OACG,qBAAKK,UAAU,8CAAf,SACG,sBAAKA,UAAU,kBAAf,UACG,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,sBAGA,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,gBAAgB,gBAAc,QAAQ,aAAW,oBAA1K,SACG,sBAAMF,UAAU,0BAEnB,sBAAKA,UAAU,2BAA2BG,GAAG,gBAA7C,UACG,qBAAIH,UAAU,kCAAd,UACG,oBAAIA,UAAU,WAAd,SACG,cAAC,EAAD,CAAWA,UAAU,WAAW,eAAa,OAAOC,GAAG,aAAvD,oBAIH,oBAAID,UAAU,WAAd,SACG,cAAC,EAAD,CAAWA,UAAU,WAAWC,GAAG,wBAAnC,mCAKN,uBAAMD,UAAU,cAAhB,UACG,uBAAOA,UAAU,oBAAoBE,KAAK,SAASE,YAAY,SAAS,aAAW,SAASC,SAAUC,KAAKV,kBAC3G,cAAC,IAAD,CAAMK,GAAE,gCAA2BK,KAAKZ,MAAMC,OAA9C,SACG,uBACGK,UAAU,wBACVE,KAAK,SACLK,QAAS,WACNC,YAAW,WACRC,SAASC,SAASC,WAClB,MAENhB,MAAM,iBAIY,IAA1BW,KAAKM,MAAMC,WACT,cAAC,IAAD,CAAMX,KAAK,SAASF,UAAU,+BAA+BC,GAAG,mBAAhE,8BAIA,cAAC,IAAD,CAAMC,KAAK,SAASF,UAAU,8BAA8BO,QAASD,KAAKM,MAAME,aAAcb,GAAG,mBAAjG,iC,GArDAc,IAAMC,WCEZC,EATE,SAACL,GACf,OACG,sBAAKZ,UAAU,YAAf,UACG,gDACA,8CAAiBY,EAAMF,SAASQ,gB,gDCH1BC,I,2EAAf,4BAAAC,EAAA,sEAC0BC,IAAMC,IAAI,uFADpC,cACSC,EADT,yBAEUA,GAFV,4C,kEAMA,WAA+BpB,GAA/B,eAAAiB,EAAA,sEAC0BC,IAAMC,IAAN,6CAAgDnB,EAAhD,8CAD1B,cACSoB,EADT,yBAEUA,GAFV,4C,kEAMA,WAA4BpB,GAA5B,eAAAiB,EAAA,sEAC0BC,IAAMC,IAAN,6CAAgDnB,EAAhD,qDAD1B,cACSoB,EADT,yBAEUA,GAFV,4C,kEAMA,WAA0BC,EAAMC,EAAcC,GAA9C,eAAAN,EAAA,sEAC0BC,IAAMC,IAAN,0CAA6CE,EAA7C,mBAA4DC,EAA5D,oBAAoFC,EAApF,8CAD1B,cACSH,EADT,yBAEUA,GAFV,4C,kEAMA,WAA+BpB,GAA/B,eAAAiB,EAAA,sEAC0BC,IAAMC,IAAN,6CAAgDnB,EAAhD,sDAD1B,cACSoB,EADT,yBAEUA,GAFV,4C,kEAYA,4BAAAH,EAAA,sEAC0BC,IAAMC,IAAN,kGAD1B,cACSC,EADT,yBAEUA,GAFV,4C,+BAMeI,I,2EAAf,4BAAAP,EAAA,sEAC0BC,IAAMC,IAAI,kGADpC,cACSC,EADT,yBAEUA,GAFV,4C,kEAMA,WAA6BK,GAA7B,eAAAR,EAAA,sEAC0BC,IAAMC,IAAN,mGAA8GM,GADxI,cACSL,EADT,yBAEUA,GAFV,4C,kEAMA,4BAAAH,EAAA,sEAC0BC,IAAMC,IAAN,2FAD1B,cACSC,EADT,yBAEUA,GAFV,4C,kEAMA,WAAsBM,GAAtB,eAAAT,EAAA,sEAC0BC,IAAMC,IAAN,wGACoEO,IAF9F,cACSN,EADT,yBAGUA,GAHV,4C,kEAOA,4BAAAH,EAAA,sEAC0BC,IAAMC,IAAI,oFADpC,cACSC,EADT,yBAEUA,GAFV,4C,kEAMA,4BAAAH,EAAA,sEAC0BC,IAAMC,IAAI,sFADpC,cACSC,EADT,yBAEUA,GAFV,4C,kEAMA,4BAAAH,EAAA,sEAC0BC,IAAMC,IAAI,mFADpC,cACSC,EADT,yBAEUA,GAFV,4C,kEAMA,WAA2BO,EAAOC,GAAlC,eAAAX,EAAA,sEAC0BC,IAAMC,IAAN,0CAA6CQ,EAA7C,mBAA6DC,EAA7D,8CAD1B,cACSR,EADT,yBAEUA,GAFV,4C,+BAMeS,E,8EAAf,WAA0B7B,GAA1B,eAAAiB,EAAA,sEAC0BC,IAAMY,OAAN,6CAAmD9B,EAAnD,qDAD1B,cACSoB,EADT,yBAEUA,GAFV,4C,kEAMA,WAAyBpB,GAAzB,eAAAiB,EAAA,sEAC0BC,IAAMC,IAAN,0CAA6CnB,EAA7C,8CAD1B,cACSoB,EADT,yBAEUA,GAFV,4C,kEAMA,WAAyBpB,GAAzB,eAAAiB,EAAA,sEAC0BC,IAAMC,IAAN,6CAAgDnB,EAAhD,8DAD1B,cACSoB,EADT,yBAEUA,GAFV,4C,kEAYA,4BAAAH,EAAA,sEAC0BC,IAAMa,KAAK,0GADrC,cACSX,EADT,yBAEUA,GAFV,4C,+BAMeY,E,gFAAf,WAAuBhC,EAAIiC,GAA3B,eAAAhB,EAAA,sEAC0BC,IAAMa,KAAN,6CAAiD/B,EAAjD,oDAAuG,CAAEkC,QAAS,CAAE,eAAgB,oBAAsBD,OAAQA,EAAOzC,QADnM,cACS4B,EADT,yBAEUA,GAFV,4C,kCC3Cee,E,4MA5EZ5C,MAAQ,CACL6C,IAAI,G,EAGPC,QAAU,SAACC,GACRhC,SAASiC,gBAAgBC,UAAY,EACrCnC,YAAW,WACRC,SAASC,SAASC,WAClB,M,EAGNiC,WAAa,WACV,MAA8B,eAA1B,EAAKhC,MAAMiC,WAET,cAAC,IAAD,CAAM5C,GAAE,+BAA0B,EAAKW,MAAMa,aAArC,YAAqD,EAAKb,MAAMc,eAAiBF,KAAM,EAAKZ,MAAMY,KAAMxB,UAAU,kBAA1H,mBAI6B,aAAxB,EAAKY,MAAMkC,SAEhB,cAAC,IAAD,CACG7C,GAAE,+BAA0B,EAAKW,MAAMa,cACvCD,KAAM,EAAKZ,MAAMY,KACjBxB,UAAU,kBACVO,QAAS,WACNwC,sBAAY,OAAQ,EAAKnC,MAAMY,OALrC,mBAYsB,OAArB,EAAKZ,MAAMoC,MAET,cAAC,IAAD,CAAM/C,GAAE,wBAAmB,EAAKW,MAAM6B,SAAWzC,UAAU,kBAA3D,mBAI2B,WAAtB,EAAKY,MAAMqC,OAEhB,cAAC,IAAD,CACGhD,GAAE,4BAAuB,EAAKW,MAAM6B,SACpCzC,UAAU,kBACVO,QAAS,WACN,EAAKiC,QAAQ,EAAK5B,MAAM6B,UAJ9B,mBAYA,8BACG,cAAC,IAAD,CAAMxC,GAAE,4BAAuB,EAAKW,MAAM6B,SAAWzC,UAAU,kBAA/D,sB,4CASf,WACG,OACG,qCACG,qBAAKkD,IAAG,yCAAoC5C,KAAKM,MAAMsC,KAAOlD,UAAU,eAAemD,IAAI,QAC3F,sBAAKnD,UAAU,YAAf,UACG,oBAAIA,UAAU,aAAd,SAA4BM,KAAKM,MAAMwC,QACvC,mBAAGpD,UAAU,YAAb,SAA0BM,KAAKM,MAAMyC,WACpC/C,KAAKsC,uB,GAtEG7B,IAAMC,WCATsC,E,4MAClB5D,MAAQ,CACL6D,OAAQ,I,EAEXC,kBAAoB,WACjBrC,IACIsC,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXyD,OAAQhC,EAASmC,KAAKC,aAG3BC,OAAM,SAACC,GACLC,MAAM,uB,4CAIf,WACG,OACG,sBAAK9D,UAAU,SAAf,UACG,wBACA,kCACG,qBAAKA,UAAU,MAAf,SACIM,KAAKZ,MAAM6D,OAAOQ,KAAI,SAACC,GACrB,OACG,qBAAoBhE,UAAU,mDAA9B,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,QAASC,UAAW,QAA1D,SACG,cAAC,EAAD,CAAWd,SAAUW,EAAMX,SAAUD,MAAOY,EAAMZ,MAAOF,IAAKc,EAAMI,cAAe3B,QAASuB,EAAM7D,QAF9F6D,EAAM7D,WAS5B,oCACG,4CADH,mEAKA,oCACG,+CADH,uGAIA,oCACG,2CADH,iH,GA1CwBY,IAAMC,WC0H3BqD,E,4MAzHZ3E,MAAQ,CACL4E,SAAU,GACVC,SAAU,GACVC,OAAQ,I,EAsCXC,YAAc,WACX,EAAK/E,MAAM8E,OAAOT,KAAI,SAACC,GACpB,OACG,qBAAoBhE,UAAU,mDAA9B,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,QAASC,UAAW,QAA1D,SACG,cAAC,EAAD,CAAWnB,MAAM,KAAKK,SAAUW,EAAMX,SAAUD,MAAOY,EAAMZ,MAAOF,IAAKc,EAAMI,cAAe3B,QAASuB,EAAM7D,QAFzG6D,EAAM7D,Q,uDAvCzB,WAAqB,IAAD,Q,2CACjBuE,GACIjB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXwE,SAAU/C,EAASmC,KAAKC,aAG7BC,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,8B,0CAGZe,GACIpB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXyE,SAAUhD,EAASmC,KAAKC,aAG7BC,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,+B,0CAGZgB,GACIrB,MAAK,SAAClC,GACJoD,QAAQC,IAAIrD,GACZ,EAAKzB,SAAS,CACX0E,OAAQjD,EAASmC,KAAKC,aAG3BC,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,+B,oBAgBf,WACG,OACG,sBAAK9D,UAAU,cAAf,UACG,0BAASA,UAAU,KAAnB,UACG,4CACA,qBAAKA,UAAU,MAAf,SACIM,KAAKZ,MAAM4E,SAASP,KAAI,SAACC,GACvB,OACG,qBAAoBhE,UAAU,mDAA9B,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,QAASC,UAAW,QAA1D,SAGG,cAAC,EAAD,CAAWnB,MAAM,KAAKK,SAAUW,EAAMX,SAAUD,MAAOY,EAAMe,KAAM7B,IAAKc,EAAMI,cAAe3B,QAASuB,EAAM7D,QAJxG6D,EAAM7D,YAW5B,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,0BAASH,UAAU,KAAnB,UACG,8CACA,qBAAKA,UAAU,MAAf,SACIM,KAAKZ,MAAM6E,SAASR,KAAI,SAACC,GACvB,OACG,qBAAoBhE,UAAU,mDAA9B,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,QAASC,UAAW,QAA1D,SACG,cAAC,EAAD,CAAWnB,MAAM,KAAKK,SAAUW,EAAMX,SAAUD,MAAOY,EAAMe,KAAM7B,IAAKc,EAAMI,cAAe3B,QAASuB,EAAM7D,QAFxG6D,EAAM7D,YAS5B,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,0BAASH,UAAU,KAAnB,UACG,2CACA,qBAAKA,UAAU,MAAf,UACIM,KAAKZ,MAAM8E,OACT,wD,GA7GJzD,IAAMC,WCCR,SAASgE,EAASpE,GAC9B,OACG,qBAAKZ,UAAU,qBAAf,SACG,sBAAKA,UAAU,aAAf,UACG,qBAAIA,UAAU,2CAA2CG,GAAG,QAAQ8E,KAAK,UAAzE,UACG,oBAAIjF,UAAU,WAAWiF,KAAK,eAA9B,SACG,wBAAQjF,UAAU,sBAAsBG,GAAG,aAAa,iBAAe,MAAM,iBAAe,UAAUD,KAAK,SAAS+E,KAAK,MAAM,gBAAc,OAAO,gBAAc,OAAlK,SACG,cAAC,IAAD,CAAMjF,UAAU,uBAAuBC,GAAG,oBAA1C,wBAKN,oBAAID,UAAU,WAAWiF,KAAK,eAA9B,SACG,wBAAQjF,UAAU,eAAeG,GAAG,SAAS,iBAAe,MAAM,iBAAe,MAAMD,KAAK,SAAS+E,KAAK,MAAM,gBAAc,UAAU,gBAAc,QAAtJ,SACG,cAAC,IAAD,CAAMjF,UAAU,uBAAuBC,GAAG,gBAA1C,uBAMT,sBAAKD,UAAU,cAAcG,GAAG,eAAhC,UACG,qBAAKH,UAAU,4BAA4BG,GAAG,SAAS8E,KAAK,WAAW,kBAAgB,aAAvF,SAEG,cAAC,EAAD,MAEH,qBAAKjF,UAAU,gBAAgBG,GAAG,KAAK8E,KAAK,WAAW,kBAAgB,SAAvE,SAEG,cAAC,EAAD,c,ICWHC,E,4MAtCZxF,MAAQ,CACL6D,OAAQ,I,uDAEX,WAAqB,IAAD,Q,2CACjB4B,GACI1B,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXyD,OAAQhC,EAASmC,KAAKC,aAG3BC,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAMD,Q,oBAIf,WACG,OACG,qBAAK7D,UAAU,uBAAf,SACG,sBAAKA,UAAU,YAAf,UACG,4CACA,qBAAKA,UAAU,MAAf,SACIM,KAAKZ,MAAM6D,OAAOQ,KAAI,SAACC,GACrB,OACG,qBAAoBhE,UAAU,mDAA9B,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,SAAtC,SACG,cAAC,EAAD,CAAWjB,OAAO,SAASI,SAAUW,EAAMX,SAAUD,MAAOY,EAAMoB,eAAgBlC,IAAKc,EAAMI,cAAe3B,QAASuB,EAAM7D,QAFvH6D,EAAM7D,kB,GAzBfY,IAAMC,W,gBCAhB,SAASqE,EAAOzE,GAC5B,IAAQ0E,EAAY1E,EAAZ0E,QAEFC,EAASC,MAAaC,MAAM,CAC/BC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAAaG,aAG1B,OACG,qBAAK3F,UAAU,YAAf,SACG,qBAAKA,UAAU,SAAf,SACG,cAAC,IAAD,CAAQ6F,oBAAoB,EAAMC,cAAelF,EAAMwB,OAAQ2D,SAAUnF,EAAMmF,SAAUC,iBAAkBT,EAA3G,SACI,SAAC3E,GACC,OACG,eAAC,IAAD,CAAMZ,UAAU,OAAOiG,aAAa,MAApC,UACG,sBAAKjG,UAAU,OAAf,UACG,uBAAOkG,QAAQ,qBAAqBlG,UAAU,aAA9C,2BAGA,cAAC,IAAD,CAAO+E,KAAK,QAAQ7E,KAAK,QAAQF,UAAU,eAAeG,GAAG,qBAAqB,mBAAiB,cACnG,cAAC,IAAD,CAAc4E,KAAK,aAGtB,sBAAK/E,UAAU,OAAf,UACG,uBAAOkG,QAAQ,wBAAwBlG,UAAU,aAAjD,sBAGA,cAAC,IAAD,CAAO+E,KAAK,WAAW7E,KAAK,WAAWF,UAAU,eAAeG,GAAG,0BACnE,cAAC,IAAD,CAAc4E,KAAK,gBAGtB,wBAAQ7E,KAAK,SAASF,UAAU,kBAAhC,SACgB,UAAZsF,EAAsB,QAAU,uB,ICS7Ca,G,4MAvCZzG,MAAQ,CACL4F,QAAS,QACTc,KAAM,CAAEC,SAAU,GAAIX,MAAO,GAAIE,SAAU,K,EAG9CU,aAAe,SAAClE,GACb,IAAIsD,EAAQtD,EAAOsD,MACnB,EAAK5F,SAAS,CACXsG,KAAK,2BACChE,GADF,IAEDiE,SAAUX,EAAMa,MAAM,EAAGb,EAAMc,OAAS,OAK9C,IAAMC,EAAYC,sBAAY,kBACzBtE,EAAOsD,QAAUe,EAAUf,MAAUtD,EAAOwD,WAAaa,EAAUb,UACrE,EAAKhF,MAAM+F,cACX,EAAK/F,MAAMgG,QAAQC,KAAK,eAExB/C,MAAM,4B,4CAIZ,WACG,OACG,sBAAK9D,UAAU,YAAf,UACG,cAACqF,EAAD,CAAQjD,OAAQ9B,KAAKZ,MAAM0G,KAAML,SAAUzF,KAAKgG,aAAchB,QAAShF,KAAKZ,MAAM4F,UAClF,sBAAKtF,UAAU,eAAf,UACG,0EADH,IACuD,uBACpD,cAAC,IAAD,CAAME,KAAK,SAASF,UAAU,iBAAiBC,GAAG,sBAAlD,gC,GA/BKc,IAAMC,WCDL8F,G,4MAClBpH,MAAQ,CACLqH,UAAW,GACXC,UAAW,GACXC,aAAc,GACdC,OAAQ,CAAEvH,MAAO,GACjBwH,UAAW,GACXC,QAAS,I,EAGZC,WAAa,SAACxH,GACXA,EAAEyH,iBACF7G,SAAS8G,eAAe,UAAUC,UAAUC,IAAI,SAEhDtF,EAAQ,EAAKzC,MAAMqH,UAAU5G,GAAI,EAAKT,MAAMwH,QACxCzD,MAAK,SAACiE,GACJ/C,QAAQC,IAAI,wBAEdhB,OAAM,SAACC,GACLC,MAAM,0B,EAIf6D,kBAAoB,SAAC9H,GAClB,IAAIqH,EAASrH,EAAEE,OAAOJ,MACtB,EAAKG,SAAS,CACXoH,OAAQ,CAAEvH,MAAOuH,M,EAIvBU,WAAa,WACVnH,SAAS8G,eAAe,UAAUC,UAAUK,OAAO,SACnD7F,EAAW,EAAKpB,MAAMkH,MAAMC,OAAOtF,SAC/BgB,MAAK,SAAClC,GACJoD,QAAQC,IAAI,yBAEdhB,OAAM,SAACC,GACLC,MAAM,yB,uDAIf,WAAqB,IAAD,Q,4CACjBkE,CAAgB1H,KAAKM,MAAMkH,MAAMC,OAAOtF,SACpCgB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXiH,UAAWxF,EAASmC,UAGzBE,OAAM,SAACC,GACLC,MAAM,sB,2CAGZmE,CAAa3H,KAAKM,MAAMkH,MAAMC,OAAOtF,SACjCgB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXkH,UAAWzF,EAASmC,KAAKwE,aAG9BtE,OAAM,SAACC,GACLC,MAAM,sB,2CAGZqE,CAAgB7H,KAAKM,MAAMkH,MAAMC,OAAOtF,SACpCgB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXmH,aAAc1F,EAASmC,KAAKC,aAGjCC,OAAM,SAACC,GACLC,MAAM,sB,2CAGZqD,CAAU7G,KAAKM,MAAMkH,MAAMC,OAAOtF,SAC9BgB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXqH,UAAW5F,EAASmC,KAAKC,aAG9BC,OAAM,SAACC,GACLC,MAAM,wB,oBAIf,WACG,OACG,sBAAK9D,UAAU,YAAf,UACG,uBACA,qBAAKA,UAAU,YAAYiE,MAAO,CAAEmE,SAAU,OAA9C,SACG,sBAAKpI,UAAU,UAAf,UACG,qBAAKA,UAAU,WAAf,SACG,qBAAKkD,IAAG,yCAAoC5C,KAAKZ,MAAMqH,UAAU3C,eAAiBpE,UAAU,gCAAgCmD,IAAI,UAEnI,qBAAKnD,UAAU,WAAf,SACG,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,aAAd,SAA4BM,KAAKZ,MAAMqH,UAAU3B,iBACjD,mBAAGpF,UAAU,YAAb,SAA0BM,KAAKZ,MAAMqH,UAAU1D,WAC/C,oBAAGrD,UAAU,2DAAb,UACG,+BACG,wBAAOA,UAAU,aAAjB,2BAA6CM,KAAKZ,MAAMqH,UAAUsB,kBAErE,+BACG,wBAAOrI,UAAU,aAAjB,2BAA6CM,KAAKZ,MAAMqH,UAAUuB,kBAErE,+BACG,wBAAOtI,UAAU,aAAjB,yBAA2CM,KAAKZ,MAAMqH,UAAUwB,6BAQlF,uBACA,uBACA,sBAAKvI,UAAU,SAAf,UACG,qBAAKA,UAAU,WAAf,SACG,sBAAKG,GAAG,SAAS8D,MAAO,CAAEuE,OAAQ,QAAlC,yBACgBlI,KAAKZ,MAAMwH,OAAOvH,WAGrC,uBAAMQ,GAAG,WAAW4F,SAAUzF,KAAK+G,WAAnC,UACG,oDACA,uBACA,uBACA,uBAAOnH,KAAK,SAASuI,IAAI,KAAKC,IAAI,IAAIrI,SAAUC,KAAKqH,oBACrD,uBACA,uBACA,uBAAO3H,UAAU,yBAAyBE,KAAK,cAElD,uBACA,wBAAQF,UAAU,wBAAwBE,KAAK,SAASK,QAASD,KAAKsH,WAAtE,4BAKH,uBACA,uBAEA,gCACG,oBAAI3D,MAAO,CAAE0E,UAAW,UAAxB,4BAAiDrI,KAAKZ,MAAMqH,UAAU3B,kBACtE,qBAAKpF,UAAU,gBAAf,SACIM,KAAKZ,MAAMsH,UAAUjD,KAAI,SAAC6E,GAAD,OACvB,qBAAkB5I,UAAU,aAAaiE,MAAO,CAAE4E,UAAW,SAA7D,SACG,qBAAK3F,IAAG,yCAAoC0F,EAAIE,WAAa9I,UAAU,kCAAkCmD,IAAI,SADtGyF,EAAIzI,YAOvB,uBACA,uBACA,gCACG,oBAAI8D,MAAO,CAAE0E,UAAW,UAAxB,2BACA,qBAAK3I,UAAU,UAAf,SACIM,KAAKZ,MAAMuH,aAAalD,KAAI,SAACgF,GAAD,OAC1B,gCACG,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFJF,EAAO5I,YAQ1B,uBACA,sBAAKH,UAAU,kBAAf,UACG,oBAAIA,UAAU,cAAd,oCACA,uBACA,qBAAKA,UAAU,MAAf,SACIM,KAAKZ,MAAMyH,UAAUpD,KAAI,SAACmF,GACxB,OACG,qBAAwBlJ,UAAU,mDAAlC,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,SAAtC,SACG,cAAC,EAAD,CAAWjB,OAAO,SAASI,SAAU6F,EAAU7F,SAAUD,MAAO8F,EAAU9D,eAAgBlC,IAAKgG,EAAU9E,cAAe3B,QAASyG,EAAU/I,QAFvI+I,EAAU/I,YAUhC,8B,GApL2BY,IAAMC,WC+C9BmI,G,4MA7CZzJ,MAAQ,CACL4F,QAAS,WACTc,KAAM,CAAEV,MAAO,GAAIE,SAAU,K,EAGhCwD,QAAU,SAAChH,GACR,EAAKtC,SAAS,CACXsG,KAAK,eACChE,KAITT,IACI8B,MAAK,SAAClC,GAEJwB,sBAAY,QAASxB,EAASmC,KAAK2F,kBAErCzF,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,kCAIZf,sBAAY,iBAAkBX,GAC9B,EAAKtC,SAAS,CACXsG,KAAK,2BACC,EAAK1G,MAAM0G,MADb,IAEDV,MAAO,GACPE,SAAU,GACV0D,OAAQ,eAId,EAAK1I,MAAMgG,QAAQC,KAAK,qB,4CAG3B,WACG,OACG,qBAAK7G,UAAU,YAAf,SACG,cAACqF,EAAD,CAAQjD,OAAQ9B,KAAKZ,MAAM0G,KAAML,SAAUzF,KAAK8I,QAASE,OAAQhJ,KAAKZ,MAAM4J,OAAQhE,QAAShF,KAAKZ,MAAM4F,gB,GAxC7FvE,IAAMC,W,SCDRuI,G,4MAClB7J,MAAQ,CACLsH,UAAW,GACXC,aAAc,GACdC,OAAQ,CAAEvH,MAAO,GACjBwH,UAAW,GACXC,QAAS,GACToC,OAAQ,I,EAGXnC,WAAa,SAACxH,GACXA,EAAEyH,iBACF7G,SAAS8G,eAAe,UAAUC,UAAUC,IAAI,U,EAGnDE,kBAAoB,SAAC9H,GAClB,IAAIqH,EAASrH,EAAEE,OAAOJ,MACtB,EAAKG,SAAS,CACXoH,OAAQ,CAAEvH,MAAOuH,M,uDAIvB,WAAqB,IAAD,Q,4CACjBuC,CAAUnJ,KAAKM,MAAMkH,MAAMC,OAAOtF,SAC9BgB,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACX0J,OAAQjI,EAASmC,UAGtBE,OAAM,SAACC,GACLC,MAAM,6B,oBAIf,WAAU,IAAD,OACN,OACG,sBAAK9D,UAAU,YAAf,UACG,uBACA,qBAAKA,UAAU,YAAYiE,MAAO,CAAEmE,SAAU,OAA9C,SACG,sBAAKpI,UAAU,UAAf,UACG,qBAAKA,UAAU,WAAf,SACG,qBAAKkD,IAAG,yCAAoC5C,KAAKZ,MAAM8J,OAAOpF,eAAiBpE,UAAU,gCAAgCmD,IAAI,UAEhI,qBAAKnD,UAAU,WAAf,SACG,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,aAAd,SAA4BM,KAAKZ,MAAM8J,OAAOpE,iBAC9C,mBAAGpF,UAAU,YAAb,SAA0BM,KAAKZ,MAAM8J,OAAOnG,WAC5C,oBAAGrD,UAAU,2DAAb,UACG,+BACG,wBAAOA,UAAU,aAAjB,2BACkBM,KAAKZ,MAAM8J,OAAOE,eADpC,MACuDpJ,KAAKZ,MAAM8J,OAAOG,mBAG5E,+BACG,wBAAO3J,UAAU,aAAjB,2BAA6CM,KAAKZ,MAAM8J,OAAOlB,kBAElE,+BACG,wBAAOtI,UAAU,aAAjB,yBAA2CM,KAAKZ,MAAM8J,OAAOjB,6BAQ/E,uBACA,uBACA,uBAEA,sBAAKvI,UAAU,WAAf,UACG,oBAAIA,UAAU,cAAd,qBACA,uBACA,qBAAKA,UAAU,MAAf,cACkC4J,IAA9BtJ,KAAKZ,MAAM8J,OAAOK,QAChB,2CAEAvJ,KAAKZ,MAAM8J,OAAOK,QAAQ9F,KAAI,SAACmF,GAC5B,OACG,qBAAwBlJ,UAAU,mDAAlC,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,SAAtC,SACG,cAAC,EAAD,CAAWpB,SAAS,WAAWO,SAAU6F,EAAU7F,SAAUD,MAAO8F,EAAUnE,KAAM7B,IAAKgG,EAAUY,YAAarI,aAAcyH,EAAUnH,cAAeP,KAAM,EAAK9B,MAAM8J,OAAOrJ,QAF3K+I,EAAU/I,YAWnC,8B,GAzF6BY,IAAMC,WCmEhC+I,G,4MAjEZrK,MAAQ,CACLsK,cAAe,I,uDAElB,WAAqB,IAAD,Q,8CAGjBC,CAFWvD,sBAAY,QACRpG,KAAKM,MAAMkH,MAAMC,OAAOtF,SAEnCgB,MAAK,SAAClC,GACJoD,QAAQC,IAAI,WAAYrD,EAASmC,MACjC,EAAK5D,SAAS,CACXkK,cAAezI,EAASmC,UAG7BE,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,4B,oBAGf,WACG,OACG,sBAAK9D,UAAU,YAAf,UACG,6BAAKM,KAAKZ,MAAMsK,cAAcjF,OAC9B,qBAAK/E,UAAU,YAAYiE,MAAO,CAAEmE,SAAU,OAA9C,SACG,sBAAKpI,UAAU,UAAf,UACG,qBAAKA,UAAU,WAAf,SACG,qBAAKkD,IAAG,yCAAoC5C,KAAKZ,MAAMsK,cAAcF,aAAe9J,UAAU,gCAAgCmD,IAAI,UAErI,qBAAKnD,UAAU,WAAf,SACG,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,aAAd,SAA4BM,KAAKZ,MAAMsK,cAAcjF,OACrD,mBAAG/E,UAAU,YAAb,SAA0BM,KAAKZ,MAAMsK,cAAc3G,WACnD,mBAAGrD,UAAU,2DAAb,SACG,+BACG,wBAAOA,UAAU,aAAjB,uBAAyCM,KAAKZ,MAAMsK,cAAcE,0BAQpF,uBACA,uBACA,uBACA,uBACA,0CACA,qBAAKlK,UAAU,MAAf,cAC0C4J,IAAtCtJ,KAAKZ,MAAMsK,cAAcG,SACvB,2CAEA7J,KAAKZ,MAAMsK,cAAcG,SAASpG,KAAI,SAACmF,GACpC,OACG,qBAAwBlJ,UAAU,mDAAlC,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,SAAtC,SACG,cAAC,EAAD,CAAWrB,WAAW,aAAaQ,SAAU6F,EAAU7F,SAAUD,MAAO8F,EAAUnE,KAAM7B,IAAKgG,EAAUkB,WAAY3I,aAAcyH,EAAUnH,cAAeL,cAAewH,EAAUmB,oBAF/KnB,EAAU/I,gB,GArDZY,IAAMC,WC0CvBsJ,G,4MA1CZ5K,MAAQ,CACL6K,eAAgB,GAChB1I,YAAa,EAAKjB,MAAMkH,MAAMC,OAAOyC,a,EAexCC,kBAAoB,WAUjB,OATW,EAAK/K,MAAM6K,eAAexG,KAAI,SAACC,GACvC,OACG,qBAAoBhE,UAAU,mDAA9B,SACG,qBAAKA,UAAU,OAAOiE,MAAO,CAAEC,MAAO,SAAtC,SACG,cAAC,EAAD,CAAWjB,OAAO,SAASI,SAAUW,EAAMX,SAAUD,MAAOY,EAAMoB,eAAgBlC,IAAKc,EAAMI,cAAe3B,QAASuB,EAAM7D,QAFvH6D,EAAM7D,Q,uDAhBzB,WAAqB,IAAD,Q,4CACjBuK,CAAOpK,KAAKZ,MAAMmC,aACd4B,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACXyK,eAAgBhJ,EAASmC,KAAKC,aAGnCC,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,2B,oBAiBf,WACG,OACG,8BACG,sBAAK9D,UAAU,YAAf,UACG,6CACA,qBAAKA,UAAU,MAAf,SAA2D,IAArCM,KAAKZ,MAAM6K,eAAe/D,OAAe,2CAAoBlG,KAAKmK,+B,GApC9E1J,IAAMC,WCsEhB2J,G,4MArEZjL,MAAQ,CACLkL,YAAa,I,uDAEhB,WAAqB,IAAD,Q,gDAIjBC,CAHWnE,sBAAY,QACJpG,KAAKM,MAAMkH,MAAMgD,IAAIvE,MAAM,GAAIjG,KAAKM,MAAMkH,MAAMgD,IAAItE,OAASlG,KAAKM,MAAMkH,MAAMC,OAAOoC,SAAS3D,OAAS,GACtGlG,KAAKM,MAAMkH,MAAMC,OAAOoC,UAExC1G,MAAK,SAAClC,GACJ,EAAKzB,SAAS,CACX8K,YAAarJ,EAASmC,UAG3BE,OAAM,SAACC,GACLc,QAAQC,IAAIf,GACZC,MAAM,0B,oBAGf,WACG,OACG,mCACkC8F,IAA9BtJ,KAAKZ,MAAMkL,YAAYzK,GACrB,0CAEA,8BACG,sBAAKH,UAAU,YAAf,UACG,+BACIM,KAAKZ,MAAMkL,YAAYP,eAD3B,KAC6C/J,KAAKZ,MAAMkL,YAAY7F,QAEpE,qBAAK/E,UAAU,YAAYiE,MAAO,CAAEmE,SAAU,OAA9C,SACG,sBAAKpI,UAAU,UAAf,UACG,qBAAKA,UAAU,WAAf,SACG,qBAAKkD,IAAG,yCAAoC5C,KAAKZ,MAAMkL,YAAYR,YAAcpK,UAAU,gCAAgCmD,IAAI,UAElI,qBAAKnD,UAAU,WAAf,SACG,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,aAAd,SAA4BM,KAAKZ,MAAMkL,YAAY7F,OACnD,mBAAG/E,UAAU,YAAb,SAA0BM,KAAKZ,MAAMkL,YAAYvH,WACjD,oBAAGrD,UAAU,2DAAb,UACG,+BACG,wBAAOA,UAAU,aAAjB,2BAA6CM,KAAKZ,MAAMkL,YAAYV,cAEvE,+BACG,wBAAOlK,UAAU,aAAjB,2BAA6CM,KAAKZ,MAAMkL,YAAYtC,kBAEvE,+BACG,wBAAOtI,UAAU,aAAjB,yBAA2CM,KAAKZ,MAAMkL,YAAYrC,6BAOpF,wBACGvI,UAAU,kBACVO,QAAS,WACNwK,OAAOnE,QAAQoE,QAHrB,gC,GAtDCjK,IAAMC,WCaPiK,G,4MAClBvL,MAAQ,CACLmB,YAAY,EACZqK,MAAO,CAAE7B,cAAe,IACxB8B,iBAAkB,CAAEA,iBAAkB,IACtCC,UAAW,CAAE/B,cAAe,K,EAG/B1C,YAAc,WACX,IAAI9F,OAAqD+I,IAAxClD,sBAAY,kBAAkBhB,MAC/C,EAAK5F,SAAS,CACXe,WAAYA,K,EAIlBC,aAAe,WACZ,EAAKhB,SAAS,CACXe,YAAY,K,EAkClBwK,YAAc,SAACtD,GACZ,OAA8B,IAA1B,EAAKrI,MAAMmB,WAET,eAAC,KAAD,WACG,cAAC,KAAD,CAAOyK,KAAK,aAAahM,OAAK,EAACiM,UAAWvG,IAC1C,cAAC,KAAD,CAAOsG,KAAK,yBAAyBhM,OAAK,EAACiM,UAAWrG,IACtD,cAAC,KAAD,CAAOoG,KAAM,6BAA8BhM,OAAK,EAACkM,OAAQ,SAAC5K,GAAD,OAAW,cAAC,GAAD,aAAWuK,iBAAkB,EAAKzL,MAAMyL,iBAAkBD,MAAO,EAAKxL,MAAMwL,OAAWtK,OAC3J,cAAC,KAAD,CAAO0K,KAAM,gCAAiChM,OAAK,EAACkM,OAAQ,SAAC5K,GAAD,OAAW,cAAC,GAAD,aAAmBuK,iBAAkB,EAAKzL,MAAMyL,iBAAkBD,MAAO,EAAKxL,MAAMwL,OAAWtK,OACtK,cAAC,KAAD,CAAO0K,KAAM,0CAA2ChM,OAAK,EAACkM,OAAQ,SAAC5K,GAAD,OAAW,cAAC,GAAD,aAASuK,iBAAkB,EAAKzL,MAAMyL,iBAAkBD,MAAO,EAAKxL,MAAMwL,OAAWtK,OACtK,cAAC,KAAD,CAAO0K,KAAM,yBAA0BhM,OAAK,EAACkM,OAAQ,SAAC5K,GAAD,OAAW,cAAC,GAAD,aAAauK,iBAAkB,EAAKzL,MAAMyL,iBAAkBD,MAAO,EAAKxL,MAAMwL,OAAWtK,OACzJ,cAAC,KAAD,CAAO0K,KAAM,qCAAsChM,OAAK,EAACiM,UAAWjB,KACpE,cAAC,KAAD,CAAOgB,KAAM,IAAKC,UAAWvG,IAC7B,cAAC,KAAD,CAAOuG,UAAWtK,IAClB,cAAC,KAAD,CAAOqK,KAAM,mBAAoBE,OAAQ,SAAC5K,GAAD,OAAW,cAAC,GAAD,aAAO+F,YAAa,EAAKA,aAAiB/F,OAC9F,cAAC,KAAD,CAAO0K,KAAM,sBAAuBC,UAAWpC,SAGnB,IAA1B,EAAKzJ,MAAMmB,WAEhB,gCACG,mBAAGb,UAAU,cAAb,yDACA,eAAC,KAAD,WACG,cAAC,KAAD,CAAOA,UAAU,WAAWsL,KAAM,mBAAoBE,OAAQ,SAAC5K,GAAD,OAAW,cAAC,GAAD,aAAO+F,YAAa,EAAKA,aAAiB/F,OACnH,cAAC,KAAD,CAAOZ,UAAU,WAAWsL,KAAM,sBAAuBC,UAAWpC,gBANzE,G,uDA/CV,WAAqB,IAAD,OACjB7I,KAAKqG,c,0CAEL8E,GACIhI,MAAK,SAACiE,GACJ,EAAK5H,SAAS,CACX4L,eAAgB,CAAEP,iBAAkBzD,EAAQhE,KAAKyH,uBAGtDvH,OAAM,SAACC,GACLC,MAAM,oC,0CAGZ6H,GACIlI,MAAK,SAACiE,GACJ,EAAK5H,SAAS,CACXoL,MAAO,CAAE7B,cAAe3B,EAAQhE,KAAK2F,oBAG1CzF,OAAM,SAACC,GACLC,MAAM,4B,2CAGZ8H,CAActL,KAAKZ,MAAMwL,OACrBzH,MAAK,SAACiE,OACN9D,OAAM,SAACC,GACLC,MAAM,8B,oBAkCf,WACG,OACG,qBAAK9D,UAAU,MAAf,SACG,eAAC,IAAD,CAAY6L,SAAS,UAArB,UACG,cAAC,EAAD,CAAQhL,WAAYP,KAAKZ,MAAMmB,WAAYC,aAAcR,KAAKQ,eAC7DR,KAAK+K,uB,GAtFYtK,IAAMC,WCLxB8K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvI,MAAK,YAAkD,IAA/CwI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASd,OACN,cAAC,IAAMe,WAAP,UACG,cAAC,GAAD,MAEH9L,SAAS8G,eAAe,SAM3BuE,O","file":"static/js/main.0e117033.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst MyNavLink = (myNavLinkProps) => (\r\n   <NavLink exact activeClassName=\"active\" {...myNavLinkProps}>\r\n      {myNavLinkProps.children}\r\n   </NavLink>\r\n);\r\n\r\nclass Navbar extends React.Component {\r\n   state = {\r\n      value: '',\r\n   };\r\n   livesearchvalue = (e) => {\r\n      this.setState({\r\n         value: e.target.value,\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n               <Link className=\"navbar-brand\" to=\"/\">\r\n                  MovieApp\r\n               </Link>\r\n               <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n               </button>\r\n               <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                  <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                     <li className=\"nav-item\">\r\n                        <MyNavLink className=\"nav-link\" aria-current=\"page\" to=\"/movie_app\">\r\n                           Home\r\n                        </MyNavLink>\r\n                     </li>\r\n                     <li className=\"nav-item\">\r\n                        <MyNavLink className=\"nav-link\" to=\"/movie_app/nowplaying\">\r\n                           Now playing page\r\n                        </MyNavLink>\r\n                     </li>\r\n                  </ul>\r\n                  <form className=\"d-flex ms-2\">\r\n                     <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.livesearchvalue} />\r\n                     <Link to={`/movie_app/searchpage/${this.state.value}`}>\r\n                        <input\r\n                           className=\"btn btn-outline-light\"\r\n                           type=\"submit\"\r\n                           onClick={() => {\r\n                              setTimeout(() => {\r\n                                 document.location.reload();\r\n                              }, 1000);\r\n                           }}\r\n                           value=\"search\"\r\n                        />\r\n                     </Link>\r\n                  </form>\r\n                  {this.props.loginState === false ? (\r\n                     <Link type=\"button\" className=\"btn btn-outline-success ms-3\" to=\"/movie_app/login\">\r\n                        login / register\r\n                     </Link>\r\n                  ) : (\r\n                     <Link type=\"button\" className=\"btn btn-outline-danger ms-3\" onClick={this.props.handellogout} to=\"/movie_app/login\">\r\n                        log out\r\n                     </Link>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         </nav>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst NotFound = (props) => {\r\n   return (\r\n      <div className=\"container\">\r\n         <h2>404, Not Found</h2>\r\n         <p>No Match For {props.location.pathname}</p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NotFound;\r\n","import axios from 'axios';\r\n\r\n// get movie pupular\r\nasync function GetMovies() {\r\n   const response = await axios.get('https://api.themoviedb.org/3/movie/popular?api_key=473677c1d644d2063c54ea98ec68113a');\r\n   return response;\r\n}\r\n\r\n// get movie details\r\nasync function GetMovieDetails(id) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function GetMovieImgs(id) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/images?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function Getepisode(tvid, seasonnumber, episodenumber) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/tv/${tvid}/season/${seasonnumber}/episode/${episodenumber}?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function GetMovieReviews(id) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function Similar(id) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function GetToken() {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/authentication/token/new?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function createRequestToken() {\r\n   const response = await axios.get('https://api.themoviedb.org/3/authentication/token/new?api_key=473677c1d644d2063c54ea98ec68113a');\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function createSession(tokin) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/authentication/session/new?api_key=473677c1d644d2063c54ea98ec68113a`, tokin);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function nowplaying() {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function search(searchvalue) {\r\n   const response = await axios.get(`\r\n   https://api.themoviedb.org/3/search/movie?api_key=473677c1d644d2063c54ea98ec68113a&query=${searchvalue}`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function tvpoupular() {\r\n   const response = await axios.get('https://api.themoviedb.org/3/tv/popular?api_key=473677c1d644d2063c54ea98ec68113a');\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function tvtoprated() {\r\n   const response = await axios.get('https://api.themoviedb.org/3/tv/top_rated?api_key=473677c1d644d2063c54ea98ec68113a');\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function tvlatest() {\r\n   const response = await axios.get('https://api.themoviedb.org/3/tv/latest?api_key=473677c1d644d2063c54ea98ec68113a');\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function GetTvseason(tv_id, season_number) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/tv/${tv_id}/season/${season_number}?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// delete\r\nasync function DeleteRate(id) {\r\n   const response = await axios.delete(`https://api.themoviedb.org/3/movie/${id}/rating?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function tvdetails(id) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/tv/${id}?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// get\r\nasync function Recommend(id) {\r\n   const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=473677c1d644d2063c54ea98ec68113a`);\r\n   return response;\r\n}\r\n\r\n// post\r\nasync function SessionId(request_token) {\r\n   const response = await axios.post('https://api.themoviedb.org/3/authentication/session/new?api_key=473677c1d644d2063c54ea98ec68113a', request_token);\r\n   return response;\r\n}\r\n\r\n// post\r\nasync function GuestSessionId() {\r\n   const response = await axios.post('https://api.themoviedb.org/3/authentication/guest_session/new?api_key=473677c1d644d2063c54ea98ec68113a');\r\n   return response;\r\n}\r\n\r\n// post\r\nasync function AddRate(id, values) {\r\n   const response = await axios.post(`https://api.themoviedb.org/3/movie/${id}/rating?api_key=473677c1d644d2063c54ea98ec68113a`, { headers: { 'Content-Type': 'application/json' }, values: values.value });\r\n   return response;\r\n}\r\n\r\nexport { GetMovies, GetMovieDetails, AddRate, GetMovieImgs, GetMovieReviews, tvdetails, GetTvseason, Getepisode, createRequestToken, nowplaying, tvlatest, tvpoupular, tvtoprated, search, Recommend, createSession, GuestSessionId, GetToken, Similar, SessionId, DeleteRate };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { bake_cookie } from 'sfcookies';\r\n\r\nclass Moviecard extends React.Component {\r\n   state = {\r\n      kk: true,\r\n   };\r\n\r\n   refresh = (idmovie) => {\r\n      document.documentElement.scrollTop = 0;\r\n      setTimeout(() => {\r\n         document.location.reload();\r\n      }, 1000);\r\n   };\r\n\r\n   handelLink = () => {\r\n      if (this.props.tvsolonger === 'tvsolonger') {\r\n         return (\r\n            <Link to={`/movie_app/tv/season/${this.props.seasonnumber}/${this.props.episodenumber}`} tvid={this.props.tvid} className=\"btn btn-primary\">\r\n               Go it\r\n            </Link>\r\n         );\r\n      } else if (this.props.tvlonger === 'tvlonger') {\r\n         return (\r\n            <Link\r\n               to={`/movie_app/tv/season/${this.props.seasonnumber}`}\r\n               tvid={this.props.tvid}\r\n               className=\"btn btn-primary\"\r\n               onClick={() => {\r\n                  bake_cookie('tvid', this.props.tvid);\r\n               }}\r\n            >\r\n               Go it\r\n            </Link>\r\n         );\r\n      } else {\r\n         if (this.props.ffrom === 'tv') {\r\n            return (\r\n               <Link to={`/movie_app/tv/${this.props.idmovie}`} className=\"btn btn-primary\">\r\n                  Go it\r\n               </Link>\r\n            );\r\n         } else if (this.props.longer === 'longer') {\r\n            return (\r\n               <Link\r\n                  to={`/movie_app/movies/${this.props.idmovie}`}\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                     this.refresh(this.props.idmovie);\r\n                  }}\r\n               >\r\n                  Go it\r\n               </Link>\r\n            );\r\n         } else {\r\n            return (\r\n               <div>\r\n                  <Link to={`/movie_app/movies/${this.props.idmovie}`} className=\"btn btn-primary\">\r\n                     Go it\r\n                  </Link>\r\n               </div>\r\n            );\r\n         }\r\n      }\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <img src={`https://image.tmdb.org/t/p/w500${this.props.src}`} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n               <h5 className=\"card-title\">{this.props.title}</h5>\r\n               <p className=\"card-text\">{this.props.overview}</p>\r\n               {this.handelLink()}\r\n            </div>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Moviecard;\r\n","import React from 'react';\r\nimport { GetMovies } from './api';\r\nimport Moviecard from './Moviecard';\r\n\r\nexport default class Movies extends React.Component {\r\n   state = {\r\n      movies: [],\r\n   };\r\n   componentDidMount = () => {\r\n      GetMovies()\r\n         .then((response) => {\r\n            this.setState({\r\n               movies: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert('get users error');\r\n         });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"Movies\">\r\n            <div></div>\r\n            <section>\r\n               <div className=\"row\">\r\n                  {this.state.movies.map((movie) => {\r\n                     return (\r\n                        <div key={movie.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                           <div className=\"card\" style={{ width: '18rem', minHeight: '100%' }}>\r\n                              <Moviecard overview={movie.overview} title={movie.title} src={movie.backdrop_path} idmovie={movie.id} />\r\n                           </div>\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </section>\r\n            <section>\r\n               <h3> Top Rated</h3>\r\n               https://api.themoviedb.org/3/movie/top_rated?api_key=api_key\"\r\n            </section>\r\n\r\n            <section>\r\n               <h3>recent movies</h3>\r\n               the same you will send request Get to \"https://api.themoviedb.org/3/movie/latest?api_key=api_key\"\r\n            </section>\r\n            <section>\r\n               <h3>up coming</h3>\r\n               the same you will send request Get to \" https://api.themoviedb.org/3/movie/upcoming?api_key=api_key\"\r\n            </section>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React from 'react';\r\nimport { tvpoupular, tvtoprated, tvlatest } from './api';\r\nimport Moviecard from './Moviecard';\r\n\r\nclass Tv extends React.Component {\r\n   state = {\r\n      tvmovies: [],\r\n      tvtoprat: [],\r\n      tvlate: [],\r\n   };\r\n   componentDidMount() {\r\n      tvpoupular()\r\n         .then((response) => {\r\n            this.setState({\r\n               tvmovies: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('error in get tvpoupular');\r\n         });\r\n\r\n      tvtoprated()\r\n         .then((response) => {\r\n            this.setState({\r\n               tvtoprat: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('error in get tv toprated');\r\n         });\r\n\r\n      tvlatest()\r\n         .then((response) => {\r\n            console.log(response);\r\n            this.setState({\r\n               tvlate: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('error in get tv latest');\r\n         });\r\n   }\r\n\r\n   handelatest = () => {\r\n      this.state.tvlate.map((movie) => {\r\n         return (\r\n            <div key={movie.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n               <div className=\"card\" style={{ width: '18rem', minHeight: '100%' }}>\r\n                  <Moviecard ffrom=\"tv\" overview={movie.overview} title={movie.title} src={movie.backdrop_path} idmovie={movie.id} />\r\n               </div>\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"tvcontainer\">\r\n            <section className=\"tv\">\r\n               <h3>tv popular</h3>\r\n               <div className=\"row\">\r\n                  {this.state.tvmovies.map((movie) => {\r\n                     return (\r\n                        <div key={movie.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                           <div className=\"card\" style={{ width: '18rem', minHeight: '100%' }}>\r\n                              {/* <!-- Todo: -->*/}\r\n                              {/* check on ffrom if it was found get details of tv */}\r\n                              <Moviecard ffrom=\"tv\" overview={movie.overview} title={movie.name} src={movie.backdrop_path} idmovie={movie.id} />\r\n                           </div>\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </section>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <section className=\"tv\">\r\n               <h3>tv top rated</h3>\r\n               <div className=\"row\">\r\n                  {this.state.tvtoprat.map((movie) => {\r\n                     return (\r\n                        <div key={movie.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                           <div className=\"card\" style={{ width: '18rem', minHeight: '100%' }}>\r\n                              <Moviecard ffrom=\"tv\" overview={movie.overview} title={movie.name} src={movie.backdrop_path} idmovie={movie.id} />\r\n                           </div>\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </section>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <section className=\"tv\">\r\n               <h3>tv latest</h3>\r\n               <div className=\"row\">\r\n                  {this.state.tvlate === 0 || 'undefind' ? (\r\n                     <p>no resault</p>\r\n                  ) : (\r\n                     () => {\r\n                        this.handelatest();\r\n                     }\r\n                  )}\r\n               </div>\r\n            </section>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Tv;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Movies from './movies';\r\nimport Tv from './tv';\r\n\r\nexport default function HomePage(props) {\r\n   return (\r\n      <div className=\"homepage container\">\r\n         <div className=\"bd-example\">\r\n            <ul className=\"nav nav-tabs mb-3 justify-content-center\" id=\"myTab\" role=\"tablist\">\r\n               <li className=\"nav-item\" role=\"presentation\">\r\n                  <button className=\"nav-link active p-0\" id=\"movies-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#movies\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">\r\n                     <Link className=\"text-decoration-none\" to=\"/movie_app/movies\">\r\n                        Movies\r\n                     </Link>\r\n                  </button>\r\n               </li>\r\n               <li className=\"nav-item\" role=\"presentation\">\r\n                  <button className=\"nav-link p-0\" id=\"tv-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#tv\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">\r\n                     <Link className=\"text-decoration-none\" to=\"/movie_app/tv\">\r\n                        TV\r\n                     </Link>\r\n                  </button>\r\n               </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n               <div className=\"tab-pane fade active show\" id=\"movies\" role=\"tabpanel\" aria-labelledby=\"movies-tab\">\r\n                  {/* Movies */}\r\n                  <Movies />\r\n               </div>\r\n               <div className=\"tab-pane fade\" id=\"tv\" role=\"tabpanel\" aria-labelledby=\"tv-tab\">\r\n                  {/* TV */}\r\n                  <Tv />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","import React from 'react';\r\nimport { nowplaying } from './api';\r\nimport Moviecard from './Moviecard';\r\n\r\nclass Nowplaying extends React.Component {\r\n   state = {\r\n      movies: [],\r\n   };\r\n   componentDidMount() {\r\n      nowplaying()\r\n         .then((response) => {\r\n            this.setState({\r\n               movies: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert(error);\r\n         });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"nowplaying container\">\r\n            <div className=\"container\">\r\n               <h3>new plaing</h3>\r\n               <div className=\"row\">\r\n                  {this.state.movies.map((movie) => {\r\n                     return (\r\n                        <div key={movie.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                           <div className=\"card\" style={{ width: '18rem' }}>\r\n                              <Moviecard longer=\"longer\" overview={movie.overview} title={movie.original_title} src={movie.backdrop_path} idmovie={movie.id} />\r\n                           </div>\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Nowplaying;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport default function Myform(props) {\r\n   const { btnname } = props;\r\n\r\n   const schema = Yup.object().shape({\r\n      email: Yup.string().email().required(),\r\n      password: Yup.string().required(),\r\n   });\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"myform\">\r\n            <Formik enableReinitialize={true} initialValues={props.values} onSubmit={props.onSubmit} validationSchema={schema}>\r\n               {(props) => {\r\n                  return (\r\n                     <Form className=\"form\" autoComplete=\"off\">\r\n                        <div className=\"mb-3\">\r\n                           <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                              Email address\r\n                           </label>\r\n                           <Field name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                           <ErrorMessage name=\"email\" />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                           <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n                              Password\r\n                           </label>\r\n                           <Field name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n                           <ErrorMessage name=\"password\" />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                           {btnname === 'login' ? 'login' : 'regester'}\r\n                        </button>\r\n                     </Form>\r\n                  );\r\n               }}\r\n            </Formik>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","import React from 'react';\r\nimport Myform from './myform';\r\nimport { read_cookie } from 'sfcookies';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n   state = {\r\n      btnname: 'login',\r\n      user: { username: '', email: '', password: '' },\r\n   };\r\n\r\n   checkAccount = (values) => {\r\n      let email = values.email;\r\n      this.setState({\r\n         user: {\r\n            ...values,\r\n            username: email.slice(0, email.length - 4),\r\n         },\r\n      });\r\n\r\n      // check if email is exsist in localstorage\r\n      const myaccount = read_cookie('email-password');\r\n      if ((values.email === myaccount.email) & (values.password === myaccount.password)) {\r\n         this.props.handellogin();\r\n         this.props.history.push('/movie_app');\r\n      } else {\r\n         alert('email or password wrong');\r\n      }\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <Myform values={this.state.user} onSubmit={this.checkAccount} btnname={this.state.btnname} />\r\n            <div className=\"regester-btn\">\r\n               <span>if you don't have acount regester now </span> <br />\r\n               <Link type=\"button\" className=\"btn btn-danger\" to=\"/movie_app/register\">\r\n                  register\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Moviecard from './Moviecard';\r\nimport { GetMovieDetails, GetMovieImgs, GetMovieReviews, AddRate, DeleteRate, Recommend } from './api';\r\n\r\nexport default class Moviepage extends React.Component {\r\n   state = {\r\n      datamovie: {},\r\n      movieImgs: [],\r\n      movieReviews: [],\r\n      myrate: { value: 1 },\r\n      Recommend: [],\r\n      similar: [],\r\n   };\r\n\r\n   handelrate = (e) => {\r\n      e.preventDefault();\r\n      document.getElementById('myrate').classList.add('block');\r\n\r\n      AddRate(this.state.datamovie.id, this.state.myrate)\r\n         .then((respone) => {\r\n            console.log(' add rate success');\r\n         })\r\n         .catch((error) => {\r\n            alert('error in post rate');\r\n         });\r\n   };\r\n\r\n   handelrateinState = (e) => {\r\n      let myrate = e.target.value;\r\n      this.setState({\r\n         myrate: { value: myrate },\r\n      });\r\n   };\r\n\r\n   deleterate = () => {\r\n      document.getElementById('myrate').classList.remove('block');\r\n      DeleteRate(this.props.match.params.idmovie)\r\n         .then((response) => {\r\n            console.log('DeleteRate success');\r\n         })\r\n         .catch((error) => {\r\n            alert('delete rate error');\r\n         });\r\n   };\r\n\r\n   componentDidMount() {\r\n      GetMovieDetails(this.props.match.params.idmovie)\r\n         .then((response) => {\r\n            this.setState({\r\n               datamovie: response.data,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert('get users error');\r\n         });\r\n\r\n      GetMovieImgs(this.props.match.params.idmovie)\r\n         .then((response) => {\r\n            this.setState({\r\n               movieImgs: response.data.posters,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert('get users error');\r\n         });\r\n\r\n      GetMovieReviews(this.props.match.params.idmovie)\r\n         .then((response) => {\r\n            this.setState({\r\n               movieReviews: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert('get users error');\r\n         });\r\n\r\n      Recommend(this.props.match.params.idmovie)\r\n         .then((response) => {\r\n            this.setState({\r\n               Recommend: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert('get users error');\r\n         });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <br />\r\n            <div className=\"card mb-3\" style={{ maxWidth: '95%' }}>\r\n               <div className=\"row g-0\">\r\n                  <div className=\"col-md-4\">\r\n                     <img src={`https://image.tmdb.org/t/p/w500${this.state.datamovie.backdrop_path}`} className=\"img-fluid h-100 rounded-start\" alt=\"...\" />\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                     <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.state.datamovie.original_title}</h5>\r\n                        <p className=\"card-text\">{this.state.datamovie.overview}</p>\r\n                        <p className=\"card-text d-flex justify-content-between align-items-end\">\r\n                           <span>\r\n                              <small className=\"text-muted\">release date: {this.state.datamovie.release_date}</small>\r\n                           </span>\r\n                           <span>\r\n                              <small className=\"text-muted\">vote average: {this.state.datamovie.vote_average}</small>\r\n                           </span>\r\n                           <span>\r\n                              <small className=\"text-muted\">vote count: {this.state.datamovie.vote_count}</small>\r\n                           </span>\r\n                        </p>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n            <div className=\"myrate\">\r\n               <div className=\"text-end\">\r\n                  <div id=\"myrate\" style={{ height: '20px' }}>\r\n                     my rate is: {this.state.myrate.value}\r\n                  </div>\r\n               </div>\r\n               <form id=\"formrate\" onSubmit={this.handelrate}>\r\n                  <label>rate this movie</label>\r\n                  <br />\r\n                  <br />\r\n                  <input type=\"number\" max=\"10\" min=\"1\" onChange={this.handelrateinState}></input>\r\n                  <br />\r\n                  <br />\r\n                  <input className=\"btn btn-warning btn-sm\" type=\"submit\"></input>\r\n               </form>\r\n               <br />\r\n               <button className=\"btn btn-danger btn-sm\" type=\"submit\" onClick={this.deleterate}>\r\n                  delete rate\r\n               </button>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n\r\n            <div>\r\n               <h3 style={{ textAlign: 'center' }}>{`photo of ${this.state.datamovie.original_title}`}</h3>\r\n               <div className=\"movieimgs row\">\r\n                  {this.state.movieImgs.map((img) => (\r\n                     <div key={img.id} className=\"col-2 mb-4\" style={{ maxHeight: '300px' }}>\r\n                        <img src={`https://image.tmdb.org/t/p/w500${img.file_path}`} className=\"rounded float-start w-100 h-100\" alt=\"...\" />\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n            <div>\r\n               <h3 style={{ textAlign: 'center' }}>movie reviews</h3>\r\n               <div className=\"reviews\">\r\n                  {this.state.movieReviews.map((review) => (\r\n                     <div key={review.id}>\r\n                        <h4>{review.author}</h4>\r\n                        <p>{review.content}</p>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n            <div className=\"recommendations\">\r\n               <h3 className=\"text-center\">movies recommendations</h3>\r\n               <br />\r\n               <div className=\"row\">\r\n                  {this.state.Recommend.map((moviereco) => {\r\n                     return (\r\n                        <div key={moviereco.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                           <div className=\"card\" style={{ width: '18rem' }}>\r\n                              <Moviecard longer=\"longer\" overview={moviereco.overview} title={moviereco.original_title} src={moviereco.backdrop_path} idmovie={moviereco.id} />\r\n                           </div>\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React from 'react';\r\nimport Myform from './myform';\r\nimport { createRequestToken } from './api';\r\nimport { bake_cookie } from 'sfcookies';\r\n\r\nclass Register extends React.Component {\r\n   state = {\r\n      btnname: 'register',\r\n      user: { email: '', password: '' },\r\n   };\r\n\r\n   addUser = (values) => {\r\n      this.setState({\r\n         user: {\r\n            ...values,\r\n         },\r\n      });\r\n\r\n      createRequestToken()\r\n         .then((response) => {\r\n            // add token in localstorage\r\n            bake_cookie('token', response.data.request_token);\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('error in createRequestToken');\r\n         });\r\n\r\n      // add user in localstorage\r\n      bake_cookie('email-password', values);\r\n      this.setState({\r\n         user: {\r\n            ...this.state.user,\r\n            email: '',\r\n            password: '',\r\n            formof: 'regester',\r\n         },\r\n      });\r\n\r\n      this.props.history.push('/movie_app/login');\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <Myform values={this.state.user} onSubmit={this.addUser} formof={this.state.formof} btnname={this.state.btnname} />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Moviecard from './Moviecard';\r\nimport { tvdetails } from './api';\r\n\r\nexport default class Tvmoviepage extends React.Component {\r\n   state = {\r\n      movieImgs: [],\r\n      movieReviews: [],\r\n      myrate: { value: 1 },\r\n      Recommend: [],\r\n      similar: [],\r\n      tvdata: {},\r\n   };\r\n\r\n   handelrate = (e) => {\r\n      e.preventDefault();\r\n      document.getElementById('myrate').classList.add('block');\r\n   };\r\n\r\n   handelrateinState = (e) => {\r\n      let myrate = e.target.value;\r\n      this.setState({\r\n         myrate: { value: myrate },\r\n      });\r\n   };\r\n\r\n   componentDidMount() {\r\n      tvdetails(this.props.match.params.idmovie)\r\n         .then((response) => {\r\n            this.setState({\r\n               tvdata: response.data,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            alert('get tv details error');\r\n         });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <br />\r\n            <div className=\"card mb-3\" style={{ maxWidth: '95%' }}>\r\n               <div className=\"row g-0\">\r\n                  <div className=\"col-md-4\">\r\n                     <img src={`https://image.tmdb.org/t/p/w500${this.state.tvdata.backdrop_path}`} className=\"img-fluid h-100 rounded-start\" alt=\"...\" />\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                     <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.state.tvdata.original_title}</h5>\r\n                        <p className=\"card-text\">{this.state.tvdata.overview}</p>\r\n                        <p className=\"card-text d-flex justify-content-between align-items-end\">\r\n                           <span>\r\n                              <small className=\"text-muted\">\r\n                                 release date: {this.state.tvdata.first_air_date} / {this.state.tvdata.last_air_date}\r\n                              </small>\r\n                           </span>\r\n                           <span>\r\n                              <small className=\"text-muted\">vote average: {this.state.tvdata.vote_average}</small>\r\n                           </span>\r\n                           <span>\r\n                              <small className=\"text-muted\">vote count: {this.state.tvdata.vote_count}</small>\r\n                           </span>\r\n                        </p>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"tvseason\">\r\n               <h3 className=\"text-center\">seasons</h3>\r\n               <br />\r\n               <div className=\"row\">\r\n                  {this.state.tvdata.seasons === undefined ? (\r\n                     <p>no seasons</p>\r\n                  ) : (\r\n                     this.state.tvdata.seasons.map((moviereco) => {\r\n                        return (\r\n                           <div key={moviereco.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                              <div className=\"card\" style={{ width: '18rem' }}>\r\n                                 <Moviecard tvlonger=\"tvlonger\" overview={moviereco.overview} title={moviereco.name} src={moviereco.poster_path} seasonnumber={moviereco.season_number} tvid={this.state.tvdata.id} />\r\n                              </div>\r\n                           </div>\r\n                        );\r\n                     })\r\n                  )}\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React from 'react';\r\nimport { GetTvseason } from './api';\r\nimport Moviecard from './Moviecard';\r\nimport { read_cookie } from 'sfcookies';\r\n\r\nclass Tvseasonmoviepage extends React.Component {\r\n   state = {\r\n      seasondetails: {},\r\n   };\r\n   componentDidMount() {\r\n      let tvid = read_cookie('tvid');\r\n      let seasonid = this.props.match.params.idmovie;\r\n      GetTvseason(tvid, seasonid)\r\n         .then((response) => {\r\n            console.log('response', response.data);\r\n            this.setState({\r\n               seasondetails: response.data,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('get tv season error');\r\n         });\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <h3>{this.state.seasondetails.name}</h3>\r\n            <div className=\"card mb-3\" style={{ maxWidth: '95%' }}>\r\n               <div className=\"row g-0\">\r\n                  <div className=\"col-md-4\">\r\n                     <img src={`https://image.tmdb.org/t/p/w500${this.state.seasondetails.poster_path}`} className=\"img-fluid h-100 rounded-start\" alt=\"...\" />\r\n                  </div>\r\n                  <div className=\"col-md-8\">\r\n                     <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.state.seasondetails.name}</h5>\r\n                        <p className=\"card-text\">{this.state.seasondetails.overview}</p>\r\n                        <p className=\"card-text d-flex justify-content-between align-items-end\">\r\n                           <span>\r\n                              <small className=\"text-muted\">air date: {this.state.seasondetails.air_date}</small>\r\n                           </span>\r\n                        </p>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h3>episodes</h3>\r\n            <div className=\"row\">\r\n               {this.state.seasondetails.episodes === undefined ? (\r\n                  <p>no seasons</p>\r\n               ) : (\r\n                  this.state.seasondetails.episodes.map((moviereco) => {\r\n                     return (\r\n                        <div key={moviereco.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n                           <div className=\"card\" style={{ width: '18rem' }}>\r\n                              <Moviecard tvsolonger=\"tvsolonger\" overview={moviereco.overview} title={moviereco.name} src={moviereco.still_path} seasonnumber={moviereco.season_number} episodenumber={moviereco.episode_number} />\r\n                           </div>\r\n                        </div>\r\n                     );\r\n                  })\r\n               )}\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default Tvseasonmoviepage;\r\n","import React from 'react';\r\nimport { search } from './api';\r\nimport Moviecard from './Moviecard';\r\n\r\nclass Searchpage extends React.Component {\r\n   state = {\r\n      moviessearched: [],\r\n      searchvalue: this.props.match.params.searchmovie,\r\n   };\r\n   componentDidMount() {\r\n      search(this.state.searchvalue)\r\n         .then((response) => {\r\n            this.setState({\r\n               moviessearched: response.data.results,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('error search movie');\r\n         });\r\n   }\r\n\r\n   handelcardofserch = () => {\r\n      let mykk = this.state.moviessearched.map((movie) => {\r\n         return (\r\n            <div key={movie.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xxl-2 mb-3\">\r\n               <div className=\"card\" style={{ width: '18rem' }}>\r\n                  <Moviecard longer=\"longer\" overview={movie.overview} title={movie.original_title} src={movie.backdrop_path} idmovie={movie.id} />\r\n               </div>\r\n            </div>\r\n         );\r\n      });\r\n      return mykk;\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"container\">\r\n               <h3>search page</h3>\r\n               <div className=\"row\">{this.state.moviessearched.length === 0 ? <p>no resault</p> : this.handelcardofserch()}</div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Searchpage;\r\n","import React from 'react';\r\nimport { read_cookie } from 'sfcookies';\r\nimport { Getepisode } from './api';\r\n\r\nclass Episode extends React.Component {\r\n   state = {\r\n      episodedata: {},\r\n   };\r\n   componentDidMount() {\r\n      let tvid = read_cookie('tvid');\r\n      let seasonnumber = this.props.match.url.slice(21, this.props.match.url.length - this.props.match.params.episodes.length - 1);\r\n      let episodenumber = this.props.match.params.episodes;\r\n      Getepisode(tvid, seasonnumber, episodenumber)\r\n         .then((response) => {\r\n            this.setState({\r\n               episodedata: response.data,\r\n            });\r\n         })\r\n         .catch((error) => {\r\n            console.log(error);\r\n            alert('error get episode');\r\n         });\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.state.episodedata.id === undefined ? (\r\n               <p>noresault</p>\r\n            ) : (\r\n               <div>\r\n                  <div className=\"container\">\r\n                     <h4>\r\n                        {this.state.episodedata.episode_number}: {this.state.episodedata.name}\r\n                     </h4>\r\n                     <div className=\"card mb-3\" style={{ maxWidth: '95%' }}>\r\n                        <div className=\"row g-0\">\r\n                           <div className=\"col-md-4\">\r\n                              <img src={`https://image.tmdb.org/t/p/w500${this.state.episodedata.still_path}`} className=\"img-fluid h-100 rounded-start\" alt=\"...\" />\r\n                           </div>\r\n                           <div className=\"col-md-8\">\r\n                              <div className=\"card-body\">\r\n                                 <h5 className=\"card-title\">{this.state.episodedata.name}</h5>\r\n                                 <p className=\"card-text\">{this.state.episodedata.overview}</p>\r\n                                 <p className=\"card-text d-flex justify-content-between align-items-end\">\r\n                                    <span>\r\n                                       <small className=\"text-muted\">release date: {this.state.episodedata.air_date}</small>\r\n                                    </span>\r\n                                    <span>\r\n                                       <small className=\"text-muted\">vote average: {this.state.episodedata.vote_average}</small>\r\n                                    </span>\r\n                                    <span>\r\n                                       <small className=\"text-muted\">vote count: {this.state.episodedata.vote_count}</small>\r\n                                    </span>\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                     <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                           window.history.back();\r\n                        }}\r\n                     >\r\n                        go back\r\n                     </button>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Episode;\r\n","import './App.css';\nimport React from 'react';\nimport Navbar from './components/navbar';\nimport NotFound from './components/page404';\nimport HomePage from './components/homepage';\nimport Nowplaying from './components/nowplaying';\nimport Login from './components/login';\nimport Moviepage from './components/moviepage';\nimport Register from './components/register';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Tvmoviepage from './components/tvmoviepage';\nimport Tvseasonmoviepage from './components/tvseasonmoviepage';\nimport { read_cookie } from 'sfcookies';\nimport Searchpage from './components/searchpage';\nimport Episode from './components/episode';\nimport { createSession, GuestSessionId, GetToken } from './components/api';\n\nexport default class App extends React.Component {\n   state = {\n      loginState: false,\n      token: { request_token: '' },\n      guest_session_id: { guest_session_id: '' },\n      SessionId: { request_token: '' },\n   };\n\n   handellogin = () => {\n      let loginState = read_cookie('email-password').email === undefined ? false : true;\n      this.setState({\n         loginState: loginState,\n      });\n   };\n\n   handellogout = () => {\n      this.setState({\n         loginState: false,\n      });\n   };\n\n   componentDidMount() {\n      this.handellogin();\n\n      GuestSessionId()\n         .then((respone) => {\n            this.setState({\n               guestSessionId: { guest_session_id: respone.data.guest_session_id },\n            });\n         })\n         .catch((error) => {\n            alert('error to get guest_session_id');\n         });\n\n      GetToken()\n         .then((respone) => {\n            this.setState({\n               token: { request_token: respone.data.request_token },\n            });\n         })\n         .catch((error) => {\n            alert('error to get GetToken');\n         });\n\n      createSession(this.state.token)\n         .then((respone) => {})\n         .catch((error) => {\n            alert('error to get GetToken');\n         });\n   }\n\n   switchRoute = (params) => {\n      if (this.state.loginState === true) {\n         return (\n            <Switch>\n               <Route path=\"/movie_app\" exact component={HomePage} />\n               <Route path=\"/movie_app/nowplaying/\" exact component={Nowplaying} />\n               <Route path={'/movie_app/movies/:idmovie'} exact render={(props) => <Moviepage guest_session_id={this.state.guest_session_id} token={this.state.token} {...props} />} />\n               <Route path={'/movie_app/tv/season/:idmovie'} exact render={(props) => <Tvseasonmoviepage guest_session_id={this.state.guest_session_id} token={this.state.token} {...props} />} />\n               <Route path={'/movie_app/tv/season/:idmovie/:episodes'} exact render={(props) => <Episode guest_session_id={this.state.guest_session_id} token={this.state.token} {...props} />} />\n               <Route path={'/movie_app/tv/:idmovie'} exact render={(props) => <Tvmoviepage guest_session_id={this.state.guest_session_id} token={this.state.token} {...props} />} />\n               <Route path={'/movie_app/searchpage/:searchmovie'} exact component={Searchpage} />\n               <Route path={'/'} component={HomePage} />\n               <Route component={NotFound} />\n               <Route path={'/movie_app/login'} render={(props) => <Login handellogin={this.handellogin} {...props} />} />\n               <Route path={'/movie_app/register'} component={Register} />\n            </Switch>\n         );\n      } else if (this.state.loginState === false) {\n         return (\n            <div>\n               <p className=\"text-center\">please login or regiter to acces our movies</p>\n               <Switch>\n                  <Route className=\"nav-link\" path={'/movie_app/login'} render={(props) => <Login handellogin={this.handellogin} {...props} />} />\n                  <Route className=\"nav-link\" path={'/movie_app/register'} component={Register} />\n               </Switch>\n            </div>\n         );\n      }\n   };\n\n   render() {\n      return (\n         <div className=\"App\">\n            <HashRouter hashType=\"noslash\">\n               <Navbar loginState={this.state.loginState} handellogout={this.handellogout} />\n               {this.switchRoute()}\n            </HashRouter>\n         </div>\n      );\n   }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}